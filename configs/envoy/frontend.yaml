static_resources:
  listeners:
  - address:
      socket_address:
        address: 0.0.0.0
        port_value: 80
    filter_chains:
    - filters:
      - name: envoy.http_connection_manager
        typed_config:
          "@type": type.googleapis.com/envoy.config.filter.network.http_connection_manager.v2.HttpConnectionManager
          upgrade_configs:
            - upgrade_type: websocket
          codec_type: auto
          stat_prefix: ingress_http
          http2_protocol_options:
            allow_connect: true
          use_remote_address: true
          skip_xff_append: false
          xff_num_trusted_hops: 3
          route_config:
            name: local_route
            virtual_hosts:
            - name: backend
              domains:
              - "*"
              routes:
                - match:
                    prefix: "/"
                  redirect:
                    path_redirect: "/"
                    https_redirect: true
          http_filters:
          - name: envoy.router
            typed_config: {}
  - address:
      socket_address:
        address: 0.0.0.0
        port_value: 443
    filter_chains:
    - filters:
      - name: envoy.http_connection_manager
        typed_config:
          "@type": type.googleapis.com/envoy.config.filter.network.http_connection_manager.v2.HttpConnectionManager
          upgrade_configs:
            - upgrade_type: websocket
          codec_type: auto
          stat_prefix: ingress_http
          http2_protocol_options:
            allow_connect: true
          use_remote_address: true
          skip_xff_append: false
          xff_num_trusted_hops: 3
          access_log:
            - name: envoy.file_access_log
              config:
                path: /dev/stdout
                json_format:
                  protocol: "%PROTOCOL%"
                  duration: "%DURATION%"
                  cluster: "%UPSTREAM_CLUSTER%"
                  path: "%REQ(X-ENVOY-ORIGINAL-PATH?:PATH)%"
          route_config:
            name: local_route
            virtual_hosts:
            - name: rocketchat
              require_tls: EXTERNAL_ONLY
              domains:
              - "chat.*"
              routes:
              - match:
                  prefix: "/"
                route:
                  cluster: rocketchat
            - name: keycloak
              require_tls: EXTERNAL_ONLY
              domains:
              - "sso.*"
              routes:
              - match:
                  prefix: "/"
                route:
                  cluster: keycloak
            - name: grafana
              require_tls: EXTERNAL_ONLY
              domains:
              - "grafana.*"
              routes:
              - match:
                  prefix: "/"
                route:
                  cluster: grafana
          http_filters:
          - name: envoy.router
            config: {}
      transport_socket:
        name: envoy.transport_sockets.tls
        typed_config:
          "@type": type.googleapis.com/envoy.api.v2.auth.DownstreamTlsContext
          common_tls_context:
            tls_certificates:
            - certificate_chain:
                filename: "/etc/mikemay-io.crt"
              private_key:
                filename: "/etc/mikemay-io.key"
  clusters:
  - name: rocketchat
    connect_timeout: 0.25s
    type: strict_dns
    lb_policy: round_robin
    # http2_protocol_options: {}
    load_assignment:
      cluster_name: rocketchat
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: rocketchat
                port_value: 80
  - name: keycloak
    connect_timeout: 0.25s
    type: strict_dns
    lb_policy: round_robin
    # http2_protocol_options: {}
    load_assignment:
      cluster_name: keycloak
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: keycloak
                port_value: 8080
  - name: grafana
    connect_timeout: 1.0s
    type: strict_dns
    lb_policy: round_robin
    # http2_protocol_options: {}
    load_assignment:
      cluster_name: grafana
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: grafana
                port_value: 3000
admin:
  access_log_path: "/dev/null"
  address:
    socket_address:
      address: 0.0.0.0
      port_value: 8001