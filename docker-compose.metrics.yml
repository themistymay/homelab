version: "3.6"
services:
  postgres:
    image: timescale/pg_prometheus:latest-pg11
    networks:
      - homelab
    ports:
      - "5432:5432"
    environment:
      POSTGRES_PASSWORD: password
    command: ['postgres', '-csynchronous_commit=off']
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 1s
      timeout: 5s  
      retries: 10

  prometheus_postgresql_adapter:
    depends_on: 
      - postgres
    image: timescale/prometheus-postgresql-adapter:latest
    networks:
      - homelab
    ports: 
      - "9201:9201"
    command: ['-pg-host=postgres', '-pg-password=password', '-pg-prometheus-log-samples']

  telegraf:
    depends_on: 
      - prometheus
    image: telegraf:alpine
    networks: 
      - homelab
    volumes:
      - "./configs/telegraf.conf:/etc/telegraf/telegraf.conf:ro"
      - "/proc:/host/proc:ro"
      - "/var/run/docker.sock:/var/run/docker.sock"
    environment:
      HOST_PROC: /host/proc

  # node-exporter:
  #   image: quay.io/prometheus/node-exporter
  #   networks: 
  #     - homelab
  #   ports:
  #     - "9100:9100"

  prometheus:
    depends_on: 
      - postgres
      - prometheus_postgresql_adapter
    image: prom/prometheus
    networks:
      - homelab
    ports:
        - "9090:9090"
    volumes:
        - "./configs/prometheus.yml:/etc/prometheus/prometheus.yml"

  grafana:
    image: grafana/grafana
    networks: 
      - homelab
    ports: 
      - "3000:3000"
    volumes:
      - "./grafana/config/config.ini:/etc/grafana/config.ini"
      - "./grafana/dashboards:/var/lib/grafana/dashboards"
      - "./grafana/provisioning:/etc/grafana/provisioning"
    environment: 
      GF_INSTALL_PLUGINS: grafana-clock-panel,grafana-simple-json-datasource,grafana-piechart-panel,monasca-datasource,grafana-kubernetes-app

networks: 
  homelab:
    driver: bridge